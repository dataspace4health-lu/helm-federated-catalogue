# Default values for fc-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
name: fc-service
replicaCount: 1
image:
  repository: node-654e3bca7fbeeed18f81d7c7.ps-xaas.io/catalogue/fc-service-server
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"
#imagePullSecrets: []
#nameOverride: ""
#fullnameOverride: "fc-service"
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
podAnnotations: {}
podSecurityContext:
  allowPrivilegeEscalation: false
  # fsGroup: 2000
securityContext: {}
#  # capabilities:
#  #   drop:
#  #   - ALL
#  # readOnlyRootFilesystem: true
#  # runAsNonRoot: true
#  # runAsUser: 1000
service:
  type: ClusterIP
  port: 8081
ingress:
  enabled: true
  # className: nginx
  annotations:
    # kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.allow-http: "true"
    # cert-manager.io/cluster-issuer: cert-manager-webhook
    nginx.ingress.kubernetes.io/ssl-redirect: "false" #true"
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    # nginx.ingress.kubernetes.io/server-snippet: |
    #     location /actuator {
    #       deny all;
    #       return 403;
    #     }
  hosts:
    - host: null
      paths:
        - path: /catalog
          pathType: Prefix
  # tls:
  #   - secretName: wildcard-gxfs-dev
  #     hosts:
  #       - fc-server
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
probes:
  path: /catalog/actuator/health
  initialDelaySeconds: 60
  periodSeconds: 30
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
nodeSelector: {}
tolerations: []
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - fc-service
          topologyKey: "kubernetes.io/hostname"
restartPolicy: Always
# hostAliases:
#   - ip: "10.97.11.112" #use ClusterIP of your Ingress Controller here
#     hostnames:
#       - key-server
storage:
  enabled: false
  size: 2Gi
  path: /mnt/data/postgresql
extraEnv:
  - name: SERVER_SERVLET_CONTEXT_PATH
    value: /catalog
  - name: DATASTORE_FILE_PATH
    value: /var/lib/fc-service/filestore
  - name: FEDERATED_CATALOGUE_VERIFICATION_SIGNATURES
    value: "true"
  - name: GRAPHSTORE_QUERY_TIMEOUT_IN_SECONDS
    value: "5"
  # - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY
  #   value: DEBUG
postgresql:
  enabled: true
  auth:
    username: fc-service
    password: "xfsc4Ntt!"
    database: fc-service
    postgresPassword: "xfsc4Ntt!"
  primary:
    persistence:
      enabled: true
      size: 5Gi
      
neo4j:
  enabled: true
  auth:
    password: "xfsc4Ntt!"
  extraEnvVars:
    - name: NEO4J_PLUGINS
      value: '["apoc", "graph-data-science", "n10s"]'
    - name: NEO4J_dbms_security_procedures_unrestricted
      value: gds.*,apoc.*,n10s.*,semantics.*
    - name: NEO4J_dbms_security_procedures_allowlist
      value: gds.*,apoc.*,n10s.*,semantics.*
  advertisedHost: "neo4j.local" 
  resourcesPreset: "none"
  service:
    type: ""
  persistence:
    size: 5Gi
  initContainers:
    - name: init-plugins
      image: appropriate/curl:latest
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - name: empty-dir
          mountPath: /opt/bitnami/neo4j/plugins
          subPath: app-plugins-dir
      securityContext:
        allowPrivilegeEscalation: false
      command:
        - "/bin/sh"
        - "-c"
        - |
          set -xe
          curl -L https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/5.20.0/apoc-5.20.0-extended.jar -O
          curl -L https://github.com/neo4j-labs/neosemantics/releases/download/5.20.0/neosemantics-5.20.0.jar -O
          curl -L https://graphdatascience.ninja/neo4j-graph-data-science-2.6.7.jar -O
          cp -R apoc-5.20.0-extended.jar /opt/bitnami/neo4j/plugins
          cp -R neosemantics-5.20.0.jar /opt/bitnami/neo4j/plugins
          cp -R neo4j-graph-data-science-2.6.7.jar /opt/bitnami/neo4j/plugins
keycloak:
  enabled: true
  url: http://dataspace4health.local/iam/
  jwtIssuer: http://dataspace4health.local/iam/realms/gaia-x
  client:
    id: "keycloak"
    secret: "**********"
  image:
    tag: 23.0.7
  auth:
    adminUser: admin
    adminPassword: "xfsc4Ntt!"
  extraEnvVars:
    - name: KEYCLOAK_EXTRA_ARGS
      value: "--import-realm"
    - name: PROXY_ADDRESS_FORWARDING
      value: "true"
  extraVolumeMounts:
    - name: config
      mountPath: "/opt/bitnami/keycloak/data/import/iam-realm.json"
      subPath: "iam-realm.json"
      readOnly: true
  extraVolumes:
    - name: config
      configMap:
        name: keycloak-realm
        items:
        - key: "iam-realm.json"
          path: "iam-realm.json"
  logging:
    level: "DEBUG,io.quarkus:INFO,freemarker.cache:INFO,liquibase:INFO,org.hibernate:INFO,org.infinispan:INFO,org.keycloak.services.scheduled:INFO,org.keycloak.transaction:INFO,io.netty.buffer.PoolThreadCache:INFO,org.keycloak.models.sessions.infinispan:INFO"
  production: false
  proxy: edge
  httpRelativePath: "/iam/"
  postgresql:
    enabled: true
    nameOverride: keycloak-postgressql
    auth: 
      database: keycloak
      username: keycloak 
      password: "xfsc4Ntt!"
      postgresPassword: "xfsc4Ntt!"
    primary:
      persistence:
        size: 5Gi
  ingress:
    enabled: true
    # ingressClassName: nginx
    annotations:
    #   kubernetes.io/ingress.allow-http: "true"
    # #  cert-manager.io/cluster-issuer: cert-manager-webhook
    #   nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    extraHosts:
      - name: ""
    pathType: Prefix
    path: /iam
    servicePort: 8080
    # tls: true
  serviceAccount:
    create: false
  service:
    ports:
      http: 8080