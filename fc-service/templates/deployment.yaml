apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fc-service.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "fc-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "fc-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "fc-service.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fc-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "fc-service.fullname" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if and .Values.ingress.tls (gt (len .Values.ingress.tls) 0) }}
          command: 
            - /bin/sh
          args:
            - -c
            - |
              for f in /opt/fc-service/certs/*.crt; do 
                echo "Adding certificate $f to keystore"
                certname=$(echo $(basename $f) | sed 's|.crt||g' )
                keytool -import -trustcacerts -noprompt -storepass changeit -alias $(basename $f) -file $f -keystore ${JAVA_HOME}/lib/security/cacerts
              done
              
              echo "Starting Spring Boot"
              java $JAVA_OPTS -cp @/app/jib-classpath-file eu.xfsc.fc.server.CatalogueServerApplication
          {{- end }}
          env:
            - name: SERVER_PORT
              value: "{{ .Values.service.port }}"
            {{- if .Values.neo4j.enabled }}
            - name: GRAPHSTORE_URI
              value: bolt://{{ include "fc-service.fullname" . }}-neo4j.{{ .Release.Namespace }}.svc.cluster.local:7687
            {{- else }}
            - name: GRAPHSTORE_URI
              value: {{ .Values.neo4j.uri }}
            {{- end }}
            - name: GRAPHSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "fc-service.fullname" . }}-neo4j
                  key: password
            {{- if .Values.postgresql.enabled }}
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://{{ include "fc-service.fullname" . }}-postgresql-hl.{{ .Release.Namespace }}.svc.cluster.local:5432/{{ .Values.postgresql.auth.database }}
            {{- else }}
            - name: SPRING_DATASOURCE_URL
              value: {{ .Values.postgresql.url }}
            {{- end }}
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "fc-service.fullname" . }}-postgresql
                  key: password
            - name: KEYCLOAK_AUTH_SERVER_URL
              value: {{ .Values.keycloak.url }}
            - name: KEYCLOAK_CREDENTIALS_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "fc-service.fullname" . }}-keycloak-client
                  key: client-secret
            - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI
              value: {{ .Values.keycloak.jwtIssuer }}
            {{- with .Values.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
           httpGet:
             path: {{ .Values.probes.path }} 
             port: http
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.path }} 
              port: http
            initialDelaySeconds: {{ .Values.probes.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.periodSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- range .Values.ingress.tls }}
            - name: {{ .secretName | replace "." "-" }}
              mountPath: /opt/fc-service/certs
              readOnly: true
            {{- end }}
      volumes:
        {{- range .Values.ingress.tls }}
        - name: {{ .secretName | replace "." "-" }}
          secret:
            secretName: {{ .secretName }}
            items:
              - key: ca.crt
                path: {{ .secretName }}.crt
            defaultMode: 420
        {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.restartPolicy }}
      restartPolicy: {{ .Values.restartPolicy }}
      {{- end }}
      {{- with .Values.hostAliases }}
      hostAliases:
        {{- toYaml . | nindent 8 }}
      {{- end }}
